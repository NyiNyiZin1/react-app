{"ast":null,"code":"var _jsxFileName = \"D:\\\\iTRMS\\\\react-demo\\\\src\\\\Components\\\\state\\\\State.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Star from \"./Star\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function State() {\n  _s();\n  const [contact, setContact] = React.useState({\n    firstName: \"John\",\n    lastName: \"Doe\",\n    phone: \"+1 (719) 555-1212\",\n    email: \"itsmyrealname@example.com\",\n    isFavorite: true,\n    address: \"Hino\"\n  });\n  /**49\r\n   * Challenge: Use a ternary to determine which star image filename\r\n   * should be used based on the `contact.isFavorite` property\r\n   * \r\n   * `true` => \"star-filled.png\"\r\n   * `false` => \"star-empty.png\"\r\n   * \r\n   * Then use the starIcon value to display the correct image\r\n   */\n\n  // let starIcon = contact.isFavorite ? \"star-filled.jpg\" : \"star-empty.png\"\n\n  function toggleFavorite() {\n    setContact(prevContact => {\n      return {\n        // firstName: \"John\",\n        // lastName: \"Doe\",\n        // phone: \"+1 (719) 555-1212\",\n        // email: \"itsmyrealname@example.com\",\n        ...prevContact,\n        isFavorite: !prevContact.isFavorite\n      };\n    });\n    console.log(contact);\n  }\n  //{isShown && <p>{props.punchline}</p>}\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.imgflip.com/1bij.jpg\",\n        className: \"card--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card--info\",\n        children: [/*#__PURE__*/_jsxDEV(Star, {\n          isFilled: contact.isFavorite,\n          handleClick: toggleFavorite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card--name\",\n          children: [contact.firstName, \" \", contact.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card--contact\",\n          children: contact.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card--contact\",\n          children: contact.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(State, \"BESY5l14/G2jm8CeGC6yPEMdJ50=\");\n_c = State;\nvar _c;\n$RefreshReg$(_c, \"State\");","map":{"version":3,"names":["React","Star","jsxDEV","_jsxDEV","State","_s","contact","setContact","useState","firstName","lastName","phone","email","isFavorite","address","toggleFavorite","prevContact","console","log","children","className","src","fileName","_jsxFileName","lineNumber","columnNumber","isFilled","handleClick","_c","$RefreshReg$"],"sources":["D:/iTRMS/react-demo/src/Components/state/State.js"],"sourcesContent":["import React from \"react\"\r\nimport Star from \"./Star\"\r\nexport default function State() {\r\n    const [contact, setContact] = React.useState({\r\n        firstName: \"John\",\r\n        lastName: \"Doe\",\r\n        phone: \"+1 (719) 555-1212\",\r\n        email: \"itsmyrealname@example.com\",\r\n        isFavorite: true,\r\n        address: \"Hino\"\r\n    })\r\n    /**49\r\n     * Challenge: Use a ternary to determine which star image filename\r\n     * should be used based on the `contact.isFavorite` property\r\n     * \r\n     * `true` => \"star-filled.png\"\r\n     * `false` => \"star-empty.png\"\r\n     * \r\n     * Then use the starIcon value to display the correct image\r\n     */\r\n    \r\n    // let starIcon = contact.isFavorite ? \"star-filled.jpg\" : \"star-empty.png\"\r\n    \r\n    function toggleFavorite() {\r\n        setContact(prevContact => {\r\n            return {\r\n                // firstName: \"John\",\r\n                // lastName: \"Doe\",\r\n                // phone: \"+1 (719) 555-1212\",\r\n                // email: \"itsmyrealname@example.com\",\r\n                ...prevContact,\r\n                isFavorite: !prevContact.isFavorite\r\n            }\r\n        })\r\n        console.log(contact)\r\n    }\r\n    //{isShown && <p>{props.punchline}</p>}\r\n    return (\r\n        <main>\r\n            <article className=\"card\">\r\n                <img src=\"https://i.imgflip.com/1bij.jpg\" className=\"card--image\" />\r\n                <div className=\"card--info\">\r\n                    <Star isFilled={contact.isFavorite} handleClick={toggleFavorite}/>\r\n                    {/* <img \r\n                        src={`../images/${starIcon}`} \r\n                        className=\"card--favorite\"\r\n                        onClick={toggleFavorite}\r\n                    /> */}\r\n                    <h2 className=\"card--name\">\r\n                        {contact.firstName} {contact.lastName}\r\n                    </h2>\r\n                    <p className=\"card--contact\">{contact.phone}</p>\r\n                    <p className=\"card--contact\">{contact.email}</p>\r\n                </div>\r\n            </article>\r\n        </main>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC;IACzCC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,mBAAmB;IAC1BC,KAAK,EAAE,2BAA2B;IAClCC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;EACb,CAAC,CAAC;EACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;;EAEA,SAASC,cAAcA,CAAA,EAAG;IACtBR,UAAU,CAACS,WAAW,IAAI;MACtB,OAAO;QACH;QACA;QACA;QACA;QACA,GAAGA,WAAW;QACdH,UAAU,EAAE,CAACG,WAAW,CAACH;MAC7B,CAAC;IACL,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAACZ,OAAO,CAAC;EACxB;EACA;EACA,oBACIH,OAAA;IAAAgB,QAAA,eACIhB,OAAA;MAASiB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACrBhB,OAAA;QAAKkB,GAAG,EAAC,gCAAgC;QAACD,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpEtB,OAAA;QAAKiB,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBhB,OAAA,CAACF,IAAI;UAACyB,QAAQ,EAAEpB,OAAO,CAACO,UAAW;UAACc,WAAW,EAAEZ;QAAe;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAMlEtB,OAAA;UAAIiB,SAAS,EAAC,YAAY;UAAAD,QAAA,GACrBb,OAAO,CAACG,SAAS,EAAC,GAAC,EAACH,OAAO,CAACI,QAAQ;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACpC,eACLtB,OAAA;UAAGiB,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAEb,OAAO,CAACK;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAChDtB,OAAA;UAAGiB,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAEb,OAAO,CAACM;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEf;AAACpB,EAAA,CAvDuBD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}